version: '3.8'

services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: xbox-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: xbox123456
      MYSQL_DATABASE: xbox_manager
      MYSQL_USER: xbox
      MYSQL_PASSWORD: xbox123456
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - xbox-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-pxbox123456"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Controller服务
  controller:
    build:
      context: .
      dockerfile: Dockerfile.controller
    container_name: xbox-controller
    restart: unless-stopped
    ports:
      - "8080:8080"  # HTTP API
      - "9090:9090"  # gRPC
      - "2112:2112"  # Prometheus metrics
    volumes:
      - ./configs/config.yaml:/app/configs/config.yaml
      - controller_logs:/app/logs
      - controller_data:/app/data
    environment:
      - XBOX_DATABASE_HOST=mysql
      - XBOX_DATABASE_PORT=3306
      - XBOX_DATABASE_USERNAME=xbox
      - XBOX_DATABASE_PASSWORD=xbox123456
      - XBOX_DATABASE_DATABASE=xbox_manager
      - XBOX_GRPC_HOST=0.0.0.0
      - XBOX_GRPC_PORT=9090
      - XBOX_SERVER_HOST=0.0.0.0
      - XBOX_SERVER_PORT=8080
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - xbox-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Agent服务
  agent:
    build:
      context: .
      dockerfile: Dockerfile.agent
    container_name: xbox-agent
    restart: unless-stopped
    ports:
      - "8081:8081"  # HTTP API
      - "9091:9091"  # gRPC client
      - "2113:2113"  # Prometheus metrics
      - "1080:1080"  # SOCKS proxy
      - "8888:8888"  # HTTP proxy
    volumes:
      - ./configs/agent.yaml:/app/configs/agent.yaml
      - ./configs/sing-box.json:/app/configs/sing-box.json
      - agent_logs:/app/logs
      - agent_data:/app/data
    environment:
      - XBOX_AGENT_CONTROLLER_ADDR=controller:9090
      - XBOX_AGENT_HEARTBEAT_INTERVAL=30
      - XBOX_SERVER_HOST=0.0.0.0
      - XBOX_SERVER_PORT=8081
    depends_on:
      controller:
        condition: service_healthy
    networks:
      - xbox-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Prometheus监控
  prometheus:
    image: prom/prometheus:latest
    container_name: xbox-prometheus
    restart: unless-stopped
    ports:
      - "9000:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - xbox-network
    depends_on:
      - controller
      - agent

  # Grafana仪表板
  grafana:
    image: grafana/grafana:latest
    container_name: xbox-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=xbox123456
    networks:
      - xbox-network
    depends_on:
      - prometheus

  # Redis缓存 (可选)
  redis:
    image: redis:7-alpine
    container_name: xbox-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - xbox-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  xbox-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  mysql_data:
    driver: local
  controller_logs:
    driver: local
  controller_data:
    driver: local
  agent_logs:
    driver: local
  agent_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  redis_data:
    driver: local